name: Code Formatting (External PRs)

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  check-format:
    runs-on: ubuntu-latest
    # Only run for external PRs
    if: github.event.pull_request.head.repo.full_name != github.repository

    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-format-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-format-
            ${{ runner.os }}-pip-

      - name: Install formatting tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black ruff isort

      - name: Check Black formatting
        run: |
          echo "Checking Black formatting..."
          black --check --diff memori/ tests/ examples/ scripts/ --line-length 88 --target-version py38

      - name: Check isort
        run: |
          echo "Checking import sorting..."
          isort --check-only --diff memori/ tests/ examples/ scripts/ --profile black

      - name: Check Ruff
        run: |
          echo "Running Ruff checks..."
          ruff check memori/ tests/ examples/ scripts/

      - name: Comment on PR if formatting issues found
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const message = `## ðŸš¨ Code Formatting Issues Found

            This PR has formatting issues that need to be fixed. Please run the following commands locally:

            \`\`\`bash
            # Install formatting tools
            pip install black ruff isort

            # Auto-fix formatting
            black memori/ tests/ examples/ scripts/ --line-length 88 --target-version py38
            isort memori/ tests/ examples/ scripts/ --profile black
            ruff check memori/ tests/ examples/ scripts/ --fix

            # Commit the changes
            git add .
            git commit -m "Fix code formatting"
            git push
            \`\`\`

            The workflow will automatically re-run once you push the formatting fixes.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });